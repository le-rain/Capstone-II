function [sectionS1, sectionS2] = findS1S2peaks(iStart, iEnd, y, Fs, minDist)

for i = 1:length(iStart) %for every section 

    sectionValue = y(iStart(i):iEnd(i));
    binOne = findBinOne(sectionValue, 100);
    [peaks, sampleN] = findpeaks(sectionValue, 'MinPeakDistance', minDist, 'MinPeakProminence', binOne);
    
    % Find average peak distance in audio sections to identify S1 and S2 peaks 
    avg_dist = mean(diff(sampleN));

    % Remove non S1 and S2 peaks
    for i = 1:(length(sampleN)-2)
        if sampleN(i+1)-sampleN(i) < avg_dist && sampleN(i+2)-sampleN(i+1) < avg_dist
            sampleN(i+2) = 0;
            peaks(i+2) = 0;
        end
    end
    sampleN = nonzeros(sampleN);
    peaks = nonzeros(peaks);

    % Initiliaze list for S1 and S2 peaks
    s1 = [];
    s2 = [];
    
    % Loop for identifying and appending S1 and S2 peaks
    for i = 3:(length(sampleN))
        if sampleN(i)-sampleN(i-1) > avg_dist && sampleN(i-1)-sampleN(i-2) < avg_dist
            s1 = [s1; {sampleN(i) peaks(i)}];
            s2 = [s2; {sampleN(i+1) peaks(i+1)}];
        end
    end
    %{
    % Convert S1 and S2 lists from cells to array
    s1 = cell2mat(s1);
    s2 = cell2mat(s2);
    %}
    
    
    sectionS1 = cell(1, len);
    sectionS2 = cell(1);

    sectionS1{i} = s1;
    sectionS2{i} = s2;

end

end
