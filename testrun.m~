clear all; close all;

audio = 'Audio/lorianne-iphone11-2.m4a';

% Values (y_x) and sample rate (Fs_x) for file 
[y, Fs] = audioread(audio);

% start and end times in seconds for audio sample
t_start = 5
t_end   = 25
sample = [t_start*Fs, t_end*Fs];

% Clear previous y value to replace with new y value
clear y

% Values and sample rate for cropped or adjusted audio file
[y, Fs] = audioread(audio,sample);

% Square values to amplify signal
y = y.^2;

% Convert x values from number of samples to seconds
n = 1:numel(y);
x = n ./ Fs;

% Find all peaks with minimum distance of 0.2 seconds apart (max 300 bpm)
[value time] = findpeaks(y, Fs, 'MinPeakDistance', 0.2, 'MinPeakProminence', 0.0005);
peaks = [time, value];

% Find average peak distance to use to identify S1 and S2 peaks 
average_peak = mean(value);

%{
% Find peaks that are below 0
for i = 1:numel(value)
    if value(i) < average_peak * 0.5 %| value(i) > average_peak * 1.5
        %peaks(i,:) = [];
        value(i) = 0;
        time(i) = 0;
    end
end

time = nonzeros(time);
value = nonzeros(value);

peaks = [time value];
%}
%filter_peaks = [position, value]
%[i,~] = find(pea

% find average distance between peaks
avg_dist = mean(diff(time))

s1 = []
s2 = []

for i = 1:(numel(time)-2)
    if time(i+1)-time(i) < avg_dist & time(i+2)-time(i+1) > avg_dist
        s1 = [s1; {time(i) value(i)}];
        s2 = [s2; {time(i+1) value(i+1)}];
    elseif time(i+1)-time(i) < avg_dist & time(i+2)-time(i+1) < avg_dist
        time(i+2) = 0;
        value(i+2) = 0;
    end
end

time = nonzeros(time);
value = nonzeros(value);

peaks = [time value];

for i = 1:(numel(time)-2)
    if time(i+1)-time(i) < avg_dist & time(i+2)-time(i+1) > avg_dist
        s1 = [s1; {time(i) value(i)}];
        s2 = [s2; {time(i+1) value(i+1)}];
    end
end

s1 = cell2mat(s1);
s2 = cell2mat(s2);

%}
% Get name of plot from name of audio file
m4a = contains(audio, 'm4a');
if m4a == 1 
    filename = extractBetween(audio, "Audio/", ".m4a");
end

% plot highpass
plot(x, y, 'b');
findpeaks(y, Fs, 'MinPeakDistance', 0.2, 'MinPeakProminence', 0.0005);
hold on
plot(s1(:,1), s1(:,2), '.')
plot(s2(:,1), s2(:,2), '.')
%plot(peaks(:,1), peaks(:,2), '.')
titlename = strcat("Audio Peaks for ",filename);
title(titlename, 'FontSize', 18, 'FontWeight', 'bold');
xlabel('Time (s)');
ylabel('Relative Sound Amplitude');
ax = gca; 
ax.XAxis.FontSize = 15;
ax.YAxis.FontSize = 15;
ax.FontWeight = 'bold';
hold off;
%hold on
%plot(x, bps, 'r');
hold off
%}
%table = [y lps];

%{ 
% Plot audio values vs. time
plot(x,y)
findpeaks(y, Fs, 'MinPeakDistance', 0.5,'MinPeakProminence', 0.3);
% findpeaks(y, Fs, 'MinPeakProminence', 0.1);
titlename = strcat("Audio Peaks for ",filename);
title(titlename);
xlabel('Time (s)');
%}